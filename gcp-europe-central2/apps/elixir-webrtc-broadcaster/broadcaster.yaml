apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: broadcaster
spec:
  replicas: 3
  serviceName: broadcaster-headless
  selector:
    matchLabels:
      app: broadcaster
  template:
    metadata:
      labels:
        app: broadcaster
    spec:
      containers:
        - name: broadcaster
          image: ghcr.io/elixir-webrtc/apps/broadcaster:0.7.3
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DISTRIBUTION_MODE
              value: k8s
            - name: K8S_SERVICE_NAME
              value: broadcaster-headless
            - name: ICE_SERVER_URL
              value: turn:gcp-europe-central2.stunner.cc:3478?transport=udp
            - name: ICE_SERVER_USERNAME
              value: user-1
            - name: ICE_SERVER_CREDENTIAL
              value: pass-1
            - name: ICE_TRANSPORT_POLICY
              value: relay
            - name: ICE_PORT_RANGE
              value: 51000-52000
            - name: SECRET_KEY_BASE
              value: u1gYGbDNgA5RwdKGFe9CdK+5qLCVROAHZAFPgUVlcmjTEGdvpXqgYW9qFjLQvxZO
            - name: PHX_HOST
              value: broadcaster.gcp-europe-central2.stunner.cc
            - name: ADMIN_USERNAME
              value: admin
            - name: ADMIN_PASSWORD
              value: admin
            - name: WHIP_TOKEN
              value: token
---
apiVersion: v1
kind: Service
metadata:
  name: broadcaster-headless
spec:
  selector:
    app: broadcaster
  type: ClusterIP
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: broadcaster
  labels:
    app: broadcaster
spec:
  ports:
  - port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
  selector:
    app: broadcaster
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "broadcaster-route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
  name: broadcaster-ingress
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - broadcaster.gcp-europe-central2.stunner.cc
    secretName: broadcaster-tls
  rules:
  - host: broadcaster.gcp-europe-central2.stunner.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: broadcaster
            port:
              number: 4000
