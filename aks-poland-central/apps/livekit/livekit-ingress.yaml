# Livekit ingress
apiVersion: v1
kind: ConfigMap
metadata:
  name: livekit-ingress
data:
  config.yaml: |
    api_key: access_token
    api_secret: secret
    ws_url: wss://mediaserver.aks-poland-central.stunner.cc
    redis:
      address: redis:6379
---
apiVersion: v1
kind: Service
metadata:
  name: livekit-ingress
  labels:
    app.kubernetes.io/name: livekit-ingress
    app.kubernetes.io/instance: livekit-ingress
    app.kubernetes.io/version: "v1.4.2"
spec:
  type: ClusterIP
  ports:
    - port: 1935
      targetPort: 1935
      protocol: TCP
      name: rtmp
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: whip
  selector:
    app.kubernetes.io/name: livekit-ingress
    app.kubernetes.io/instance: livekit-ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: livekit-ingress
  labels:
    app.kubernetes.io/name: livekit-ingress
    app.kubernetes.io/instance: livekit-ingress
    app.kubernetes.io/version: "v1.4.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: livekit-ingress
      app.kubernetes.io/instance: livekit-ingress
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: livekit-ingress
        app.kubernetes.io/instance: livekit-ingress
    spec:
      terminationGracePeriodSeconds: 18000 # 5 hours
      containers:
        - name: livekit-ingress
          image: "livekit/ingress:v1.4.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: INGRESS_CONFIG_BODY
              valueFrom:
                configMapKeyRef:
                  name: livekit-ingress
                  key: config.yaml
          ports:
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: whip
              containerPort: 8080
              protocol: TCP
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: livekit-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - whip.aks-poland-central.stunner.cc
    secretName: livekit-ingress-tls
  rules:
  - host: whip.aks-poland-central.stunner.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: livekit-ingress
            port:
              number: 8080
